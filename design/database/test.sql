/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 12.0 		*/
/*  Created On : 05-一月-2019 20:27:27 				*/
/*  DBMS       : MySql 						*/
/* ---------------------------------------------------- */

SET FOREIGN_KEY_CHECKS=0

/* Drop Tables */

DROP TABLE IF EXISTS `work_group_member` CASCADE
;

DROP TABLE IF EXISTS `user_org` CASCADE
;

DROP TABLE IF EXISTS `user_login_log` CASCADE
;

DROP TABLE IF EXISTS `user` CASCADE
;

DROP TABLE IF EXISTS `server_config` CASCADE
;

DROP TABLE IF EXISTS `routine` CASCADE
;

DROP TABLE IF EXISTS `role_auth` CASCADE
;

DROP TABLE IF EXISTS `role` CASCADE
;

DROP TABLE IF EXISTS `organization` CASCADE
;

DROP TABLE IF EXISTS `org_role` CASCADE
;

DROP TABLE IF EXISTS `message` CASCADE
;

DROP TABLE IF EXISTS `file` CASCADE
;

DROP TABLE IF EXISTS `feedback` CASCADE
;

DROP TABLE IF EXISTS `discussion` CASCADE
;

DROP TABLE IF EXISTS `dictionary_type` CASCADE
;

DROP TABLE IF EXISTS `dictionary` CASCADE
;

DROP TABLE IF EXISTS `collect` CASCADE
;

DROP TABLE IF EXISTS `chat_group` CASCADE
;

DROP TABLE IF EXISTS `banner` CASCADE
;

DROP TABLE IF EXISTS `auth` CASCADE
;

/* Create Tables */

CREATE TABLE `work_group_member`
(
	`member_id` VARCHAR(32) NOT NULL,
	`user_id` VARCHAR(32) COMMENT '用户ID',
	`user_account` VARCHAR(50) COMMENT '用户账号',
	`chat_group_id` VARCHAR(32) COMMENT '群组ID',
	`user_name` VARCHAR(50) COMMENT '用户名称',
	CONSTRAINT `PK_work_group_member` PRIMARY KEY (`member_id`)
) COMMENT='工作群成员表'
;

CREATE TABLE `user_org`
(
	`user_org_id` VARCHAR(32) NOT NULL,
	`user_id` VARCHAR(32) COMMENT '用户ID',
	`org_id` VARCHAR(32) COMMENT '组织ID',
	`user_name` VARCHAR(50) COMMENT '用户名称',
	`org_role_id` VARCHAR(32) COMMENT '部门角色ID',
	`parent_org_id` VARCHAR(32) COMMENT '父组织ID',
	`org_type` VARCHAR(20) COMMENT '组织类型',
	`grade` VARCHAR(4) COMMENT '年级（在org_type为class类型是不能为空）',
	CONSTRAINT `PK_user_org` PRIMARY KEY (`user_org_id`)
) COMMENT='用户部门（班级）表'
;

CREATE TABLE `user_login_log`
(
	`login_log_id` VARCHAR(32) NOT NULL,
	`user_account` VARCHAR(32) COMMENT '登录账号',
	`session_id` VARCHAR(100) COMMENT '会话ID',
	`logout_time` DATETIME(0) COMMENT '退出时间',
	`user_ip` VARCHAR(100) COMMENT 'IP地址',
	`token` VARCHAR(1024),
	CONSTRAINT `PK_user_login_log` PRIMARY KEY (`login_log_id`)
) COMMENT='用户登录日志表'
;

CREATE TABLE `user`
(
	`user_id` VARCHAR(32) NOT NULL,
	`user_account` VARCHAR(32) COMMENT '用户账号',
	`user_password` VARCHAR(32) COMMENT '用户密码',
	`user_name` VARCHAR(50) COMMENT '用户名称',
	`user_mobile` VARCHAR(20) COMMENT '手机号',
	`user_email` VARCHAR(50) COMMENT 'QQ邮箱',
	`user_image_url` VARCHAR(255) COMMENT '用户头像地址',
	`user_description` VARCHAR(255) COMMENT '用户描述',
	`user_password_changed` DATETIME(0) COMMENT '初始密码更改日期',
	`valid` VARCHAR(3) NOT NULL 'Y' COMMENT '是否有效',
	`user_enabled_date` DATETIME(0) COMMENT '启用日期',
	`user_disabled_date` DATETIME(0) COMMENT '失效日期',
	`user_account_locked` VARCHAR(2) 'N' COMMENT '账号是否锁定',
	`last_login_date` DATETIME(0) COMMENT '最后登录时间',
	`create_time` DATETIME(0) COMMENT '创建时间',
	`create_person` VARCHAR(32) COMMENT '创建人',
	`modity_time` DATETIME(0) COMMENT '修改时间',
	`modify_person` VARCHAR(32) COMMENT '修改人',
	`user_sex` VARCHAR(3) COMMENT '用户性别',
	`user_type` VARCHAR(3) COMMENT '用户类型',
	`salt` VARCHAR(32) COMMENT '盐值',
	`words` VARCHAR(255) COMMENT '留言',
	`user_short_mobile` VARCHAR(6) COMMENT '校园短号',
	CONSTRAINT `PK_Table1` PRIMARY KEY (`user_id`)
) COMMENT='用户表  user_type 学生 教师'
;

CREATE TABLE `server_config`
(
	`config_id` VARCHAR(32) NOT NULL,
	`mapping_key` VARCHAR(32) COMMENT '键名',
	`mapping_value` VARCHAR(256) COMMENT '键值',
	CONSTRAINT `PK_server_config` PRIMARY KEY (`config_id`)
) COMMENT='服务器配置表'
;

CREATE TABLE `routine`
(
	`routine_id` VARCHAR(32) NOT NULL,
	`user_id` VARCHAR(32) COMMENT '用户ID',
	`user_name` VARCHAR(50) COMMENT '用户名称',
	`routine_type` VARCHAR(20) COMMENT '日常活动类型',
	`content` VARCHAR(10000) COMMENT '日常活动内容',
	`create_time` DATETIME(0) COMMENT '创建时间',
	`user_type` VARCHAR(20) NOT NULL COMMENT '用户类型',
	`org_id` VARCHAR(2) COMMENT '组织ID',
	`end_time` DATETIME(0) COMMENT '活动截止日期',
	`end` VARCHAR(3) 'N' COMMENT '活动是否截止',
	`grade` VARCHAR(4) COMMENT '可见年级',
	`visibility` VARCHAR(32),
	CONSTRAINT `PK_routine` PRIMARY KEY (`routine_id`)
) COMMENT='日常活动表  user_type: 直接是查询字段得到的学生或者老师等着两个身份，用来显示的，身份有为：学生、教师  此处留下user_id字段是为了知道是哪位用户发的消息  end_time和end字段之间的关系。'
;

CREATE TABLE `role_auth`
(
	`role_auth_id` VARCHAR(32) NOT NULL,
	`role_id` VARCHAR(32) COMMENT '角色ID',
	`auth_id` VARCHAR(32) COMMENT '权限ID',
	CONSTRAINT `PK_role_auth` PRIMARY KEY (`role_auth_id`)
) COMMENT='角色权限表'
;

CREATE TABLE `role`
(
	`role_id` VARCHAR(32) NOT NULL,
	`role_name` VARCHAR(50) COMMENT '角色名称',
	`role_description` VARCHAR(255) COMMENT '角色描述',
	CONSTRAINT `PK_role` PRIMARY KEY (`role_id`)
) COMMENT='角色表'
;

CREATE TABLE `organization`
(
	`org_id` VARCHAR(32) NOT NULL,
	`parent_id` VARCHAR(32) COMMENT '父级节点ID',
	`org_type` VARCHAR(20) COMMENT '组织类型',
	`pro_type` VARCHAR(20) COMMENT '专业类型',
	`org_description` VARCHAR(10000) COMMENT '组织描述',
	`org_name` VARCHAR(50) COMMENT '组织名称',
	`org_image_url` VARCHAR(255) COMMENT '组织头像地址',
	`org_annouce` VARCHAR(100) COMMENT '组织公告',
	`valid` VARCHAR(3) NOT NULL 'Y' COMMENT '是否有效',
	`user_id` VARCHAR(32) COMMENT '用户ID',
	`create_time` DATETIME(0) COMMENT '创建时间',
	`grade` VARCHAR(4) COMMENT '年级',
	`short_name` VARCHAR(6),
	`associate_type` VARCHAR(20),
	CONSTRAINT `PK_organization` PRIMARY KEY (`org_id`)
) COMMENT='部门表 org_type: 社团 机构 班级 pro_type 专业类型'
;

CREATE TABLE `org_role`
(
	`org_role_id` VARCHAR(32) NOT NULL,
	`org_id` VARCHAR(32) COMMENT '组织ID',
	`org_role_numbers` NUMERIC(10,0) COMMENT '部门角色数量',
	`role_id` VARCHAR(32) COMMENT '角色ID',
	`role_name` VARCHAR(50) COMMENT '角色名称',
	CONSTRAINT `PK_org_role` PRIMARY KEY (`org_role_id`)
) COMMENT='组织角色表'
;

CREATE TABLE `message`
(
	`id` VARCHAR(32) NOT NULL COMMENT '消息ID',
	`from` VARCHAR(32) COMMENT '发送者ID',
	`to` VARCHAR(32) COMMENT '目标ID',
	`cmd` NUMERIC(3,0) COMMENT '命令码类型',
	`create_time` DATETIME(0) COMMENT '创建时间',
	`chat_type` NUMERIC(3,0) COMMENT '聊天类型',
	`group_id` VARCHAR(50) COMMENT '群ID',
	`content` VARCHAR(5000) COMMENT '内容',
	`recall` VARCHAR(3) 'N' COMMENT '撤回',
	`user_ids` VARCHAR(5012) COMMENT '未读消息的用户ID',
	CONSTRAINT `PK_message` PRIMARY KEY (`id`)
) COMMENT='聊天信息表'
;

CREATE TABLE `file`
(
	`file_id` VARCHAR(50) NOT NULL,
	`origin_name` VARCHAR(100) COMMENT '原文件名',
	`file_size` NUMERIC(18,0) COMMENT '文件大小(byte)',
	`create_time` DATETIME(0) COMMENT '上传时间',
	`busi_id` VARCHAR(32) COMMENT '业务ID',
	`comp_id` VARCHAR(32) COMMENT '业务表名称',
	`mime_type` VARCHAR(100) COMMENT 'mime类型',
	`user_id` VARCHAR(32) COMMENT '创建者ID',
	`valid` VARCHAR(3) 'Y' COMMENT '是否有效',
	`file_path` VARCHAR(255) COMMENT '文件相对路径',
	CONSTRAINT `PK_file` PRIMARY KEY (`file_id`)
) COMMENT='文件表'
;

CREATE TABLE `feedback`
(
	`feedback_id` VARCHAR(32) NOT NULL,
	`content` VARCHAR(256) COMMENT '反馈内容',
	`org_id` VARCHAR(32) COMMENT '组织ID',
	`read` VARCHAR(3) 'N' COMMENT '是否已经查阅',
	`create_time` DATETIME(0) COMMENT '创建时间',
	`read_time` DATETIME(0) COMMENT '查阅时间',
	`user_id` VARCHAR(32) COMMENT '查阅人ID',
	`image_url_one` VARCHAR(255) COMMENT '图片URL',
	`image_url_two` VARCHAR(255) COMMENT '图片URL',
	CONSTRAINT `PK_feedback` PRIMARY KEY (`feedback_id`)
)
;

CREATE TABLE `discussion`
(
	`discussion_id` VARCHAR(32) NOT NULL,
	`content` VARCHAR(255) COMMENT '评论内容',
	`parent_id` VARCHAR(32) COMMENT '父节点ID',
	`create_time` DATETIME(0) COMMENT '创建时间',
	`routine_id` VARCHAR(32) COMMENT '日常活动ID',
	`user_id` VARCHAR(32),
	`routine_user_id` VARCHAR(32) COMMENT '发布者ID',
	CONSTRAINT `PK_discussion` PRIMARY KEY (`discussion_id`)
)
;

CREATE TABLE `dictionary_type`
(
	`code_item_id` VARCHAR(50) NOT NULL,
	`code_item_name` VARCHAR(50) COMMENT '分类名称',
	`parent_id` VARCHAR(50) COMMENT '父节点编号',
	`create_time` DATETIME(0) COMMENT '创建时间',
	`create_person` VARCHAR(32) COMMENT '创建人ID',
	`modify_person` VARCHAR(32) COMMENT '修改人ID',
	`modify_time` DATETIME(0) COMMENT '修改时间',
	CONSTRAINT `PK_dictionary_type` PRIMARY KEY (`code_item_id`)
) COMMENT='字典类型表'
;

CREATE TABLE `dictionary`
(
	`dictionary_id` VARCHAR(32) NOT NULL COMMENT '字典ID',
	`code_item_id` VARCHAR(50) COMMENT '分类类别',
	`code_id` VARCHAR(50) COMMENT '具体分类ID',
	`code_name` VARCHAR(50) COMMENT '具体分类名称',
	`create_time` DATETIME(0) COMMENT '创建时间',
	`create_person` VARCHAR(32) COMMENT '创建人ID',
	`modify_time` DATETIME(0) COMMENT '修改时间',
	`modify_person` VARCHAR(32) COMMENT '修改人ID',
	`parent_code_id` VARCHAR(50) COMMENT '父级节点',
	CONSTRAINT `PK_dictionary` PRIMARY KEY (`dictionary_id`)
) COMMENT='字典表'
;

CREATE TABLE `collect`
(
	`collection_id` VARCHAR(32) NOT NULL,
	`user_id` VARCHAR(32) COMMENT '用户ID',
	`create_time` DATETIME(0) COMMENT '创建日期',
	`collection_type` VARCHAR(20) COMMENT '收藏类型',
	`content` VARCHAR(10000) COMMENT '收藏内容',
	CONSTRAINT `PK_collection` PRIMARY KEY (`collection_id`)
) COMMENT='收藏表  collection_type: 简单文本 文件 访问内容'
;

CREATE TABLE `chat_group`
(
	`chat_group_id` VARCHAR(32) NOT NULL,
	`org_id` VARCHAR(32) COMMENT '创建组织ID',
	`user_id` VARCHAR(32) COMMENT '创建ID',
	`chat_group_name` VARCHAR(50) COMMENT '群组名称',
	CONSTRAINT `PK_chat_group` PRIMARY KEY (`chat_group_id`)
) COMMENT='工作群表'
;

CREATE TABLE `banner`
(
	`banner_id` VARCHAR(32) NOT NULL,
	`banner_image_url` VARCHAR(255) COMMENT '图像地址',
	`banner_title` VARCHAR(50) COMMENT '横幅标题',
	`routine_id` VARCHAR(32) COMMENT '日常活动ID',
	`create_time` DATETIME(0) COMMENT '创建时间',
	`org_id` VARCHAR(32) COMMENT '组织ID',
	CONSTRAINT `PK_banner` PRIMARY KEY (`banner_id`)
) COMMENT='横幅表'
;

CREATE TABLE `auth`
(
	`auth_id` VARCHAR(32) NOT NULL COMMENT '权限ID',
	`auth_name` VARCHAR(50),
	`auth_url` VARCHAR(200) COMMENT '权限URL(移动端特指页面)',
	`parent_id` VARCHAR(32) COMMENT '父级节点',
	`auth_type` VARCHAR(20) COMMENT '权限类型',
	`api_url` VARCHAR(200) COMMENT '服务端的API服务权限',
	CONSTRAINT `PK_auth` PRIMARY KEY (`auth_id`)
) COMMENT='操作权限表'
;

/* Create Primary Keys, Indexes, Uniques, Checks */

ALTER TABLE `work_group_member` 
 ADD INDEX `IXFK_work_group_member_chat_group` (`chat_group_id` ASC)
;

ALTER TABLE `user_org` 
 ADD INDEX `IXFK_user_org_org_role` (`org_role_id` ASC)
;

ALTER TABLE `user_org` 
 ADD INDEX `IXFK_user_org_organization` (`org_id` ASC)
;

ALTER TABLE `user_org` 
 ADD INDEX `IXFK_user_org_user` (`user_id` ASC)
;

ALTER TABLE `routine` 
 ADD INDEX `IXFK_routine_organization` (`org_id` ASC)
;

ALTER TABLE `role_auth` 
 ADD INDEX `IXFK_role_auth_auth` (`auth_id` ASC)
;

ALTER TABLE `role_auth` 
 ADD INDEX `IXFK_role_auth_role` (`role_id` ASC)
;

ALTER TABLE `organization` 
 ADD INDEX `IXFK_organization_user` (`user_id` ASC)
;

ALTER TABLE `org_role` 
 ADD INDEX `IXFK_org_role_organization` (`org_id` ASC)
;

ALTER TABLE `org_role` 
 ADD INDEX `IXFK_org_role_role` (`role_id` ASC)
;

ALTER TABLE `feedback` 
 ADD INDEX `IXFK_feedback_organization` (`org_id` ASC)
;

ALTER TABLE `discussion` 
 ADD INDEX `IXFK_discussion_routine` (`routine_id` ASC)
;

ALTER TABLE `dictionary` 
 ADD INDEX `IXFK_dictionary_dictionary_type` (`code_item_id` ASC)
;

ALTER TABLE `collect` 
 ADD INDEX `IXFK_collection_user` (`user_id` ASC)
;

ALTER TABLE `banner` 
 ADD INDEX `IXFK_banner_routine` (`routine_id` ASC)
;

/* Create Foreign Key Constraints */

ALTER TABLE `work_group_member` 
 ADD CONSTRAINT `FK_work_group_member_chat_group`
	FOREIGN KEY (`chat_group_id`) REFERENCES `chat_group` (`chat_group_id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `user_org` 
 ADD CONSTRAINT `FK_user_org_org_role`
	FOREIGN KEY (`org_role_id`) REFERENCES `org_role` (`org_role_id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `user_org` 
 ADD CONSTRAINT `FK_user_org_organization`
	FOREIGN KEY (`org_id`) REFERENCES `organization` (`org_id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `user_org` 
 ADD CONSTRAINT `FK_user_org_user`
	FOREIGN KEY (`user_id`) REFERENCES `user` (`user_id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `routine` 
 ADD CONSTRAINT `FK_routine_organization`
	FOREIGN KEY (`org_id`) REFERENCES `organization` (`org_id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `role_auth` 
 ADD CONSTRAINT `FK_role_auth_auth`
	FOREIGN KEY (`auth_id`) REFERENCES `auth` (`auth_id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `role_auth` 
 ADD CONSTRAINT `FK_role_auth_role`
	FOREIGN KEY (`role_id`) REFERENCES `role` (`role_id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `organization` 
 ADD CONSTRAINT `FK_organization_user`
	FOREIGN KEY (`user_id`) REFERENCES `user` (`user_id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `org_role` 
 ADD CONSTRAINT `FK_org_role_organization`
	FOREIGN KEY (`org_id`) REFERENCES `organization` (`org_id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `org_role` 
 ADD CONSTRAINT `FK_org_role_role`
	FOREIGN KEY (`role_id`) REFERENCES `role` (`role_id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `feedback` 
 ADD CONSTRAINT `FK_feedback_organization`
	FOREIGN KEY (`org_id`) REFERENCES `organization` (`org_id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `discussion` 
 ADD CONSTRAINT `FK_discussion_routine`
	FOREIGN KEY (`routine_id`) REFERENCES `routine` (`routine_id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `dictionary` 
 ADD CONSTRAINT `FK_dictionary_dictionary_type`
	FOREIGN KEY (`code_item_id`) REFERENCES `dictionary_type` (`code_item_id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `collect` 
 ADD CONSTRAINT `FK_collection_user`
	FOREIGN KEY (`user_id`) REFERENCES `user` (`user_id`) ON DELETE Restrict ON UPDATE Restrict
;

SET FOREIGN_KEY_CHECKS=1
